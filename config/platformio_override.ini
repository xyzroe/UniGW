; ***  Example PlatformIO Project Configuration Override File   ***
; ***  Changes done here override settings in platformio.ini    ***
;
; *****************************************************************
; ***  to activate rename this file to platformio_override.ini  ***
; *****************************************************************
;
; Please visit documentation for the options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
; For best Gitpod performance remove the ";" in the next line. Needed Platformio files are cached and installed at first run
;core_dir = .platformio
; For unrelated compile errors with Windows it can help to shorten Platformio project path
;workspace_dir = c:\.pio
extra_configs           = platformio_tasmota_user_env.ini

; *** Build/upload environment
default_envs            =
                           UniGW-MindBrd_WT32-ETH01
                           UniGW-MindBrd_Wemos32
                           UniGW_T-Internet-COM
                           UniGW_Wemos-D1_mini
;                          tasmota
;                          tasmota32

[tasmota]
; *** Global build / unbuild compile time flags for ALL Tasmota / Tasmota32 [env]
;build_unflags           =
build_flags             = -DUSE_BERRY_PARTITION_WIZARD

[env]
;build_unflags           = ${common.build_unflags}
;                          -Wswitch-unreachable
;build_flags             = ${common.build_flags}
;                          -DF_CRYSTAL=26000000
;                          -Wno-switch-unreachable
; *** Optional Debug messages
;                         -DDEBUG_TASMOTA_CORE
;                         -DDEBUG_TASMOTA_DRIVER
;                         -DDEBUG_TASMOTA_SENSOR
; Build variant 1MB = 1MB firmware no filesystem (default)
;board                   = ${common.board}
; Build variant 2MB = 1MB firmware, 1MB filesystem (most Shelly devices)
;board                   = esp8266_2M1M
; Build variant 4MB = 1MB firmware, 1MB OTA, 2MB filesystem (WEMOS D1 Mini, NodeMCU, Sonoff POW)
;board                   = esp8266_4M2M
;board_build.f_cpu       = 160000000L
;board_build.f_flash     = 40000000L
; *** Define serial port used for erasing/flashing/terminal
;upload_port             = COM4
;monitor_port            = COM4
lib_extra_dirs          = ${library.lib_extra_dirs}

[env:tasmota32_base]
framework               = ${common.framework}
platform                = ${core32.platform}
platform_packages       = ${core32.platform_packages}
board_build.filesystem  = ${common.board_build.filesystem}
custom_unpack_dir       = ${common.custom_unpack_dir}
board_build.variants_dir = ${common.board_build.variants_dir}
board                   = esp32
monitor_speed           = ${common.monitor_speed}
monitor_echo            = ${common.monitor_echo}
upload_resetmethod      = ${common.upload_resetmethod}
extra_scripts           = ${esp32_defaults.extra_scripts}
build_unflags           = ${core32.build_unflags}
build_flags             = ${core32.build_flags}
lib_ldf_mode            = ${common.lib_ldf_mode}
lib_compat_mode         = ${common.lib_compat_mode}
lib_extra_dirs          = ${common.lib_extra_dirs}
                          lib/libesp32
                         ;lib/libesp32_lvgl
                         ;lib/libesp32_audio
lib_ignore              = ${esp32_defaults.lib_ignore}
                           MFRC522
                           universal display Library
                           ESP8266Audio
                           ESP8266SAM
                           ;FFat
                           ;SD
                           ;SD_MMC
                           UdpListener
                           ;Berry
                           ;Berry mapping to C
                           ;Berry Tasmota mapping
                           ;Berry int64 implementation for 32 bits architecture
                           ;Berry Matter protocol implementation
                           Micro-RTSP
                           TTGO TWatch Library
                           epdiy
; Add files to Filesystem for all env (global). Remove no files entry and add add a line with the file to include
; Example for adding the Partition Manager
; custom_files_upload =
; tasmota/berry/modules/Partition_Manager.tapp
custom_files_upload     = no_files


[library]
shared_libdeps_dir      = lib
; *** Library disable / enable for variant Tasmota(32). Disable reduces compile time
; *** !!! Disabling needed libs will generate compile errors !!!
; *** The resulting firmware will NOT be different if you leave all libs enabled
; *** Disabling by putting a ";" in front of the lib name
; *** If you dont know what it is all about, do not change
lib_extra_dirs           =
; *** Only disabled for Tasmota minimal and Tasmota light. For all other variants needed!
                           lib/lib_basic
; **** I2C devices. Most sensors. Disable only if you dont have ANY I2C device enabled
                           lib/lib_i2c
; *** Displays. Disable if you dont have any Display activated
;                           lib/lib_display
; *** Bear SSL and base64. Disable if you dont have SSL or TLS activated
                           lib/lib_ssl
; *** Audio needs a lot of time to compile. Mostly not used functions. Recommended to disable
;                           lib/lib_audio
; *** RF 433 stuff (not RF Bridge). Recommended to disable
;                           lib/lib_rf
; *** Mostly not used functions. Recommended to disable
                           lib/lib_div
