name: Build, release

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build_firmware:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - UniGW-MindBrd_Wemos32
          - UniGW-MindBrd_WT32-ETH01
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Git clone Tasmota, add custom files, change work dir
        run: |
          git clone https://github.com/arendst/Tasmota.git
          echo "git clone Tasmota - ok"
          if [ -f "Tasmota/platformio_tasmota_user_env.ini" ]; then
          rm Tasmota/platformio_tasmota_user_env.ini 
          fi
          ln config/platformio_tasmota_user_env.ini Tasmota/platformio_tasmota_user_env.ini
          echo "platformio_tasmota_user_env.ini - link ok"
          if [ -f "Tasmota/platformio_override.ini" ]; then
          rm Tasmota/platformio_override.ini 
          fi
          ln config/platformio_override.ini Tasmota/platformio_override.ini
          echo "platformio_override.ini - link ok"
          if [ -f "Tasmota/tasmota/user_config_override.h" ]; then
          rm Tasmota/tasmota/user_config_override.h
          fi
          ln config/user_config_override.h Tasmota/tasmota/user_config_override.h
          echo "user_config_override.h - link ok"
          cd Tasmota
          echo "cd Tasmota"
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: ./build_output

  release_firmware:
    runs-on: ubuntu-latest
    needs: build_firmware
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Get latest FW Release Version
        id: fw_version
        shell: bash
        run: |
          value=`git describe --tags $(git rev-list --tags --max-count=1)`
          echo "fw_version=$value" >> $GITHUB_OUTPUT
      - name: Download  firmwares
        uses: actions/download-artifact@v3
        with:
          name: firmware
          path: ./firmware
      - name: Display downloaded files
        run: |
          ls -R ./firmware/
      - name: Git clone Tasmota, add custom files, change work dir
        run: |
          git clone https://github.com/arendst/Tasmota.git
          echo "git clone Tasmota - ok"
          cd Tasmota
          echo "cd Tasmota"
      - name: Get latest Tasmota Release Version
        id: tasmota_version
        shell: bash
        run: |
          value=`git describe --tags $(git rev-list --tags --max-count=1)`
          echo "tasmota_version=$value" >> $GITHUB_OUTPUT
          cd ..
      - name: Get current date
        id: date
        run: echo "date=$(date +'%d%m%y')"  >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ steps.fw_version.outputs.fw_version }}
          name: "${{ steps.fw_version.outputs.fw_version }} (${{ steps.date.outputs.date }}, ${{ steps.tasmota_version.outputs.tasmota_version }})"
          files: |
            ./firmware/*.bin
